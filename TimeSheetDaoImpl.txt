package com.timesheet.impl;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.timesheet.TimeSheetDao;
import com.timesheet.model.Employee;
import com.timesheet.model.TimeSheet;

public class TimeSheetDaoImpl implements TimeSheetDao {

	@Override
	public boolean insertTimeSheet(TimeSheet timeSheet) {
		Connection con = connectDatabase();
		int rows = 0;
		boolean flag = false;
		try {
			PreparedStatement ps = con.prepareStatement(
			"insert into timesheet (empid, date, activity, descripition, hrs, status) values(?,?,?,?,?,?)");
			ps.setInt(1, timeSheet.getEmpId());
			ps.setDate(2, (java.sql.Date) timeSheet.getDate());
			ps.setString(3, timeSheet.getActivity());
			ps.setString(4, timeSheet.getDescripition());
			ps.setFloat(5, timeSheet.getHrs());
			ps.setString(6, timeSheet.getStatus());
			rows = ps.executeUpdate();
			if (rows > 0)
				flag = true;

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				con.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return flag;
	}

	@Override
	public Connection connectDatabase() {
		Connection con = null;
		try {
			Class.forName("com.mysql.jdbc.Driver");
			con = DriverManager.getConnection("jdbc:mysql://localhost/Task", "root", "1234");

		} catch (ClassNotFoundException | SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return con;
	}

	@Override
	public List<TimeSheet> getAllTimeSheet() {
		Connection con = connectDatabase();
		List<TimeSheet> list = new ArrayList<TimeSheet>();

		try {
			PreparedStatement ps = con.prepareStatement("select * from task.timesheet");
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				TimeSheet ts = new TimeSheet();
				ts.setId(rs.getInt("id"));
				ts.setEmpId(rs.getInt("empid"));
				ts.setDate(rs.getDate("date"));
				ts.setActivity(rs.getString("activity"));
				list.add(ts);
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return list;
	}


	@Override	
	public boolean insertEmployee(Employee employee) {
	Connection con = connectDatabase();
	int rows = 0;
	boolean flag = false;
	try {
		PreparedStatement ps = con.prepareStatement(
		"insert into employee (empid, empName, hcc, emailId, date) values(?,?,?,?,?)");
		ps.setInt(1, employee.getEmpid());
		ps.setString(2, employee.getEmpName());
		ps.setString(3, employee.getHcc());
		ps.setString(4, employee.getEmailId());
		ps.setDate(5, (java.sql.Date) employee.getDate());
		rows = ps.executeUpdate();
		if (rows > 0)
			flag = true;

	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	} finally {
		try {
			con.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	return flag;
}

	@Override
	public String updateStatus() {
	// TODO Auto-generated method stub
	Connection con = connectDatabase();
	int rows = 0;
	try {
		PreparedStatement ps = con.prepareStatement("insert into timesheet1 (status) values(?)");
		((TimeSheet) ps).setStatus("updated");
		
		rows = ps.executeUpdate();
		if (rows > 0) {
		}

	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	} finally {
		try {
			con.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	return null;
}

	@Override
	public int timesheetId() {
	// TODO Auto-generated method stub
	Connection con = connectDatabase();
	int rows = 0;
	try {
		PreparedStatement ps = con.prepareStatement("insert into timesheet (status) values(?)");
		((TimeSheet) ps).setTimesheetId(10);

		rows = ps.executeUpdate();
		if (rows > 0) {
		}

	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	} finally {
		try {
			con.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	return 0;
}
}